{"version":3,"sources":["App.tsx","index.tsx"],"names":["goodsFromServer","App","useState","isReversed","setIsReversed","sortType","setSortType","visibleGoods","sort","g1","g2","localeCompare","length","reverse","className","type","classNames","onClick","isReversedNow","map","good","ReactDOM","render","document","getElementById"],"mappings":"gPAKaA,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAGWC,EAAgB,WAC3B,MAAoCC,oBAAS,GAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KACA,EAAgCF,mBAAS,QAAzC,mBAAOG,EAAP,KAAiBC,EAAjB,KAEMC,EAAY,UAAOP,GAkCzB,OAfAO,EAAaC,MAAK,SAACC,EAAIC,GACrB,OAAQL,GACN,IAAK,WACH,OAAOI,EAAGE,cAAcD,GAC1B,IAAK,SACH,OAAOD,EAAGG,OAASF,EAAGE,OACxB,QACE,OAAO,MAITT,GACFI,EAAaM,UAIb,sBAAKC,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SACLD,UAAWE,IAAW,iBAAkB,CACtC,WAAyB,aAAbX,IAEdY,QApCW,WACjBX,EAAY,aA8BR,iCAUA,wBACES,KAAK,SACLD,UAAWE,IAAW,oBAAqB,CACzC,WAAyB,WAAbX,IAEdY,QA1Ca,WACnBX,EAAY,WAoCR,4BAUA,wBACES,KAAK,SACLD,UAAWE,IAAW,oBAAqB,CACzC,YAAab,IAEfc,QA5DQ,WACdb,GAAc,SAAAc,GAAa,OAAKA,MAsD5B,sBAUe,SAAbb,GAAuBF,IACvB,wBACEY,KAAK,SACLD,UAAU,4BACVG,QAzDI,WACZX,EAAY,QACZF,GAAc,IAoDR,sBAUJ,6BACGG,EAAaY,KAAI,SAAAC,GAAI,OACpB,oBACE,UAAQ,OADV,SAIGA,GAFIA,YCrGjBC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.003e47b6.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport classNames from 'classnames';\nimport 'bulma/css/bulma.css';\nimport './App.scss';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nexport const App: React.FC = () => {\n  const [isReversed, setIsReversed] = useState(false);\n  const [sortType, setSortType] = useState('NONE');\n\n  const visibleGoods = [...goodsFromServer];\n\n  const reverse = () => {\n    setIsReversed(isReversedNow => !isReversedNow);\n  };\n\n  const sortByName = () => {\n    setSortType('ALPHABET');\n  };\n\n  const sortByLength = () => {\n    setSortType('LENGTH');\n  };\n\n  const reset = () => {\n    setSortType('NONE');\n    setIsReversed(false);\n  };\n\n  visibleGoods.sort((g1, g2) => {\n    switch (sortType) {\n      case 'ALPHABET':\n        return g1.localeCompare(g2);\n      case 'LENGTH':\n        return g1.length - g2.length;\n      default:\n        return 0;\n    }\n  });\n\n  if (isReversed) {\n    visibleGoods.reverse();\n  }\n\n  return (\n    <div className=\"section content\">\n      <div className=\"buttons\">\n        <button\n          type=\"button\"\n          className={classNames('button is-info', {\n            'is-light': sortType !== 'ALPHABET',\n          })}\n          onClick={sortByName}\n        >\n          Sort alphabetically\n        </button>\n\n        <button\n          type=\"button\"\n          className={classNames('button is-success', {\n            'is-light': sortType !== 'LENGTH',\n          })}\n          onClick={sortByLength}\n        >\n          Sort by length\n        </button>\n\n        <button\n          type=\"button\"\n          className={classNames('button is-warning', {\n            'is-light': !isReversed,\n          })}\n          onClick={reverse}\n        >\n          Reverse\n        </button>\n\n        {(sortType !== 'NONE' || isReversed) && (\n          <button\n            type=\"button\"\n            className=\"button is-danger is-light\"\n            onClick={reset}\n          >\n            Reset\n          </button>\n        )}\n\n      </div>\n      <ul>\n        {visibleGoods.map(good => (\n          <li\n            data-cy=\"Good\"\n            key={good}\n          >\n            {good}\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}